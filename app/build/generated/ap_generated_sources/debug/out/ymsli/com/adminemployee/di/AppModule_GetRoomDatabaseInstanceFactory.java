// Generated by Dagger (https://dagger.dev).
package ymsli.com.adminemployee.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ymsli.com.adminemployee.database.room.UserDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_GetRoomDatabaseInstanceFactory implements Factory<UserDatabase> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  private final Provider<String> databaseNameProvider;

  public AppModule_GetRoomDatabaseInstanceFactory(AppModule module,
      Provider<Context> contextProvider, Provider<String> databaseNameProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.databaseNameProvider = databaseNameProvider;
  }

  @Override
  public UserDatabase get() {
    return getRoomDatabaseInstance(module, contextProvider.get(), databaseNameProvider.get());
  }

  public static AppModule_GetRoomDatabaseInstanceFactory create(AppModule module,
      Provider<Context> contextProvider, Provider<String> databaseNameProvider) {
    return new AppModule_GetRoomDatabaseInstanceFactory(module, contextProvider, databaseNameProvider);
  }

  public static UserDatabase getRoomDatabaseInstance(AppModule instance, Context context,
      String databaseName) {
    return Preconditions.checkNotNullFromProvides(instance.getRoomDatabaseInstance(context, databaseName));
  }
}
